{"version":3,"sources":["logo.svg","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["array","Input","useState","setText","isFileUploaded","setIsFileUploaded","url","setUrl","columnData","setColumnData","fieldCounter","setFieldCounter","addData","setAddData","flag","setFlag","canDownload","setCanDownload","console","log","useEffect","i","push","validateFileType","name","fileNameArray","split","length","downloadTextFile","file","File","join","URL","createObjectURL","Fragment","type","id","className","onChange","event","target","files","reader","FileReader","onload","result","resultColumn","splice","readAsText","htmlFor","map","item","index","childItem","childIndex","value","onClick","style","href","download","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.122500af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\r\nimport './Input.css'\r\n\r\nlet array = [];\r\n\r\nconst Input = () => {\r\n    const [text, setText] = useState('');\r\n    const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n    const [url, setUrl] = useState('');\r\n    const [columnData, setColumnData] = useState([]);\r\n    const [fieldCounter, setFieldCounter] = useState(0);\r\n    const [addData, setAddData] = useState(false);\r\n    const [flag, setFlag] = useState(false);\r\n    const [canDownload, setCanDownload] = useState(false);\r\n\r\n    function handleUploadFile(event) {\r\n        if (validateFileType(event.target.files[0].name)) {\r\n            let file = event.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.onload = function(event) {\r\n                // The file text will be printed here\r\n                const result = event.target.result;\r\n                const resultColumn = event.target.result.split('\\n');\r\n                resultColumn.splice(-1,1);\r\n                setText(event.target.result);\r\n                setColumnData(resultColumn);\r\n                setFieldCounter(result.split('\\n')[0].split(';').length);\r\n                setIsFileUploaded(true);\r\n            };\r\n            reader.readAsText(file, 'windows-1251');\r\n        }\r\n    }\r\n\r\n    console.log(columnData);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < fieldCounter; i++) {\r\n            array.push(' ');\r\n        }\r\n    }, [fieldCounter]);\r\n\r\n    const validateFileType = name => {\r\n        const fileNameArray = name.split('.');\r\n        return(fileNameArray[fileNameArray.length - 1 ] === 'txt')\r\n    };\r\n\r\n    const downloadTextFile = () => {\r\n        const file = new File([columnData.join('\\n')], 'test.txt');\r\n        setUrl(URL.createObjectURL(file));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/*<input type={'file'} onChange={handleUploadFile} />*/}\r\n            <input type=\"file\" name=\"file\" id=\"file\" className=\"input-file\" onChange={handleUploadFile}/>\r\n                <label htmlFor=\"file\" className=\"btn btn-tertiary js-labelFile\">\r\n                    <i className=\"icon fa fa-check\"></i>\r\n                    <span className=\"js-fileName\">Загрузить файл</span>\r\n                </label>\r\n            <table>\r\n                {columnData.map((item, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            {item.split(';').map((childItem, childIndex) => {\r\n                                return <td key={childIndex}>{childItem}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n            <div className={'add-inputs-container'}>\r\n                {addData ?\r\n                    array.map((item, index) => {\r\n                        return (\r\n                            <input onChange={(event) => array[index] = event.target.value} />\r\n                        )\r\n                    }) : null}\r\n            </div>\r\n\r\n            <button onClick={() => setAddData(true)} className={'addData'}\r\n                    style={addData || !isFileUploaded ? {'display':'none'} : {'display':'block'}}>Добавить запись</button>\r\n            <button style={addData ? {'display':'block'} : {'display':'none'}} onClick={() => {\r\n                columnData.push(array.join(';'));\r\n                setColumnData(columnData);\r\n                setAddData(false);\r\n                setFlag(!flag);\r\n                setCanDownload(true);\r\n                downloadTextFile();\r\n            }}>Сохранить</button>\r\n            <a href={url} style={canDownload ? {'display' : 'block'} : {'display' : 'none'}}\r\n               download={'test'} className={'downloadLink'} onClick={() => {\r\n                downloadTextFile()\r\n            }}>Скачать</a>\r\n        </React.Fragment>\r\n\r\n    )\r\n};\r\n\r\nexport default Input;","import logo from './logo.svg';\nimport './App.css';\nimport Input from \"./components/Input\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Input/>\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>*/}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}